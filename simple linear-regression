import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

df=pd.read_csv("salary.csv")
df

x=df.YearsExperience
y=df.Salary
plt.plot(x,y)
plt.title("YearsExperience vs Salary")
plt.xlabel('YearsExperience')
plt.ylabel('Salary')

df.describe()

df.isnull().sum()

df['YearsExperience'].mean()

df['YearsExperience'].fillna(df['YearsExperience'].mean(),inplace = True)

df.isnull().sum()

df['Salary'].median()

df['Salary'].fillna(df['Salary'].median(),inplace = True)

df.isnull().sum()

x = df[['YearsExperience']]

y = df['Salary']

sns.boxplot (df['Salary'])
plt.title("Box Plot before median imputation")
plt.show()
for i in df['Salary']:
    q1=df['Salary'].quantile (0.25)
    q3=df['Salary'].quantile (0.75)
    iqr=q3-q1
    Lower_tail=q1-1.5*iqr
    Upper_tail=q3+1.5*iqr
    if i>Upper_tail or i < Lower_tail: df['Salary'] = df['Salary'].replace(i, np.median(df[ 'Salary']))
sns.boxplot(df['Salary'])
plt.title("Box Plot after median imputation")
plt.show()

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2,
random_state=42)

from sklearn.preprocessing import MinMaxScaler
min_max_scaler = MinMaxScaler().fit(x_test)
x_norm = min_max_scaler.transform(x)
x_norm

model = LinearRegression()
model.fit(x_train, y_train)

y_pred = model.predict(x_test)

new_data = np.array([9]).reshape(-1, 1)
new_data

model.predict(new_data)

#%matplotlib inline
plt.scatter(x_test,y_test, color = "blue")
plt.scatter(x_test,y_pred, color = "red")
plt.xlabel('Experience Years')
plt.ylabel('Salary')
plt.title('Experience Years VS Salary')

train_accuracy = model.score(x_train, y_train  ) 
print("train_accuracy",train_accuracy)

test_accuracy = model.score(x_test, y_test )
test_accuracyimport sklearn.metrics as sm

print("R2 score =", round(sm.r2_score(y_test, y_pred), 2))
